@{
    ViewData["Title"] = "Image Library";
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.3.4/cropper.js"></script>
<link  href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.3.4/cropper.css" rel="stylesheet">

<!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.4.0/dropzone.js"></script>
<link  href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.4.0/dropzone.css" rel="stylesheet"> -->

<style>
    img {
        max-width: 100%; /* This rule is very important, please do not ignore this! */
    }
    .preview {
        width: 200px;
        height: 200px;
        overflow: hidden;
    }
    #myDropZone {
        width: 100%;
        height: 200px;
    }
</style>

<div class="c-image-library-page">

    <div class="slds-grid slds-grid_align-center" style="margin-top: 40px;">
        <div class="slds-col slds-size_6-of-12">
            <h1>Image Library</h1>

            <div>
                <img id="image" src="/images/m1.jpeg">
            </div>
            <!-- <div class="preview preview-md"></div> -->

            <div>
                <input type="file" name="croppResult" />
            </div>
            <div>
                <button onClick="cropImage()">CropMe</button>
            </div>

            <div>
                <button onClick="saveImagesToServer()">SaveMe</button>
            </div>

            <!-- <div class="dropzone">
                <div id="myDropZone"></div>
            </div> -->

            <script>

                var blobsToSave = [];

                jQuery(function(){
                    var $image = jQuery('#image');
                    var $input = $("[name='croppResult']");

                    // var cropper = initCropper($image[0])

                    $("input:file").change(function() {
                        var oFReader = new FileReader();
                        oFReader.readAsDataURL(this.files[0]);
                        oFReader.onload = function (oFREvent) {
                            // Destroy the old cropper instance
                            if (window.cropperInstance) {
                                window.cropperInstance.destroy();
                            }
                            // Replace url
                            $image.attr('src', this.result);
                            // Start cropper
                            window.cropperInstance = initCropper($image[0])
                        };
                    });

                    /*
                    $("div#myDropZone").dropzone({
                         url: "/file/post",
                         autoQueue: false
                    });
                    */
                })

                function cropImage() {
                    var imageCanvas = window.cropperInstance.getCroppedCanvas({
                        //width: 160,
                        //height: 90,
                        minWidth: 100,
                        minHeight: 100,
                        maxWidth: 4096,
                        maxHeight: 4096,
                        fillColor: '#fff',
                        imageSmoothingEnabled: false,
                        imageSmoothingQuality: 'high'
                    });
                    console.log(imageCanvas);

                    imageCanvas.toBlob(function(blob) {
                        blobsToSave.push(blob);
                    });

                    $('<img>').attr('src', imageCanvas.toDataURL()).appendTo('body');
                }

                function initCropper(img) {
                    return cropper = new Cropper(img, {
                        //preview: '.preview',
                        crop: function(event) {
                            /*
                            console.log(event.detail.x);
                            console.log(event.detail.y);
                            console.log(event.detail.width);
                            console.log(event.detail.height);
                            console.log(event.detail.rotate);
                            console.log(event.detail.scaleX);
                            console.log(event.detail.scaleY);
                            */
                        }
                    });
                }

                function saveImagesToServer() {

                    var formData = new FormData();
                    var i = 1;
                    for (blob of blobsToSave) {
                        console.log(blob.type)
                        formData.append('files', blob, 'file_'+(new Date().getTime())+'_'+i+'.png');
                        i++;
                    }

                    $.ajax('/imagelibrary/upload', {
                        method: "POST",
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function () {
                            console.log('Upload success');
                        },
                        error: function () {
                            console.log('Upload error');
                        }
                    });

                }

            </script>

        </div>
    </div>

</div>
